/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.dev.view;

import com.dev.dal.sql.SqlRepository;
import com.dev.model.News;
import com.dev.view.ViewUserNewsJFrame;
import java.util.List;
import java.util.Optional;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author salum
 */
public class UserDashboardJFrame extends javax.swing.JFrame {

    private final SqlRepository repository = new SqlRepository();
    /**
     * Creates new form UserDashboardJFrame
     */
    public UserDashboardJFrame() {
        initComponents();
        loadNews();
    }
private void loadNews() {
        String[] columnNames = {"ID", "Title", "Description"}; // Simplified columns for user
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);

        try {
            List<News> newsList = repository.selectAllNews();
            for (News news : newsList) {
                tableModel.addRow(new Object[]{news.getNewsID(), news.getTitle(), news.getDescription()});
            }
            newsTable.setModel(tableModel);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to load news: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

  private void handleViewNews() {
    int selectedRow = newsTable.getSelectedRow();

    if (selectedRow >= 0) {
        int newsId = (int) newsTable.getValueAt(selectedRow, 0);

        try {
            News selectedNews = repository.selectNews(newsId).orElse(null);
            if (selectedNews != null) {
                new ViewUserNewsJFrame(selectedNews).setVisible(true); // Pass only the News object
            } else {
                JOptionPane.showMessageDialog(this, "Unable to retrieve the selected news details.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to load news details: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a news item to view.", "Info", JOptionPane.INFORMATION_MESSAGE);
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        newsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        viewNewsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User Dashboard");

        newsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(newsTable);

        jLabel1.setText("Select on a news to view and comment");

        viewNewsButton.setText("View News");
        viewNewsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewNewsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(viewNewsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(viewNewsButton))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewNewsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewNewsButtonActionPerformed
        // TODO add your handling code here:
   int selectedRow = newsTable.getSelectedRow();

    if (selectedRow >= 0) {
        int newsId = (int) newsTable.getValueAt(selectedRow, 0);

        try {
            // Fetch the selected news item from the repository
            Optional<News> optionalNews = repository.selectNews(newsId);

            if (optionalNews.isPresent()) {
                News selectedNews = optionalNews.get();

                // Open the ViewUserNewsJFrame with the selected news
                new ViewUserNewsJFrame(selectedNews).setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Selected news item not found in the database.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to retrieve news: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a news item to view.", "Info", JOptionPane.INFORMATION_MESSAGE);
    }

    }//GEN-LAST:event_viewNewsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDashboardJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDashboardJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDashboardJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDashboardJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDashboardJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable newsTable;
    private javax.swing.JButton viewNewsButton;
    // End of variables declaration//GEN-END:variables
}
